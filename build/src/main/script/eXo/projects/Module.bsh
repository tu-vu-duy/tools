Module() {
  tool(String version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/tool" ;
    this.relativeSRCRepo =  "tools/trunk" ;
    this.name =  "tool" ;

    this.osbsh = Project("org.exoplatform.tool", "exo.tool.build", "jar", "2.0") ;
    return this ;
  }

  kernel(String version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/kernel" ;
    this.relativeSRCRepo =  "kernel/trunk" ;
    this.name =  "kernel" ;

    this.commons = Project("org.exoplatform.kernel", "exo.kernel.commons", "jar", version) ;
    this.commons.addDependency(Project("commons-lang", "commons-lang", "jar", "2.1"));
    this.commons.addDependency(Project("xpp3", "xpp3", "jar", "1.1.3.4.O"));
    this.commons.addDependency(Project("xstream", "xstream", "jar", "1.1"));
    this.commons.addDependency(Project("dom4j", "dom4j", "jar", "1.6.1"));

    this.container = Project("org.exoplatform.kernel", "exo.kernel.container", "jar", version) ;
    this.container.addDependency(commons);
    this.container.addDependency(Project("picocontainer", "picocontainer", "jar", "1.1"));
    this.container.addDependency(Project("groovy", "groovy-all", "jar", "1.0"));
    this.container.addDependency(Project("commons-beanutils", "commons-beanutils", "jar", "1.6"));
    this.container.addDependency(Project("jibx", "jibx-run", "jar", "1.1.3"));
    this.container.addDependency(Project("asm", "asm", "jar", "1.5.3"));
    this.container.addDependency(Project("cglib", "cglib", "jar", "2.1_2"));

    misc() {
      this.drools = Project("drools", "drools-core", "jar", "2.0") ;
      this.drools.addDependency(Project("janino", "janino", "jar", "2.3.2"));
      this.drools.addDependency(Project("drools", "drools-base", "jar", "2.0"));
      this.drools.addDependency(Project("drools", "drools-io", "jar", "2.0"));
      this.drools.addDependency(Project("drools", "drools-java", "jar", "2.0"));
      this.drools.addDependency(Project("drools", "drools-smf", "jar", "2.0"));
      return this;
    }
    this.misc = misc() ;

    component() {
      this.common = Project("org.exoplatform.kernel", "exo.kernel.component.common", "jar", version) ;
      this.common.addDependency(Project("quartz", "quartz", "jar", "1.5.0-RC2"));
      this.common.addDependency(Project("mail", "activation", "jar", "1.0"));
      this.common.addDependency(Project("mail", "mail", "jar", "1.3.3"));

      this.command = Project("org.exoplatform.kernel", "exo.kernel.component.command", "jar", version) ;
      this.command.addDependency(Project("commons-chain", "commons-chain", "jar", "1.0"));
      this.command.addDependency(Project("commons-digester", "commons-digester", "jar", "1.7"));
      this.cache   = Project("org.exoplatform.kernel", "exo.kernel.component.cache", "jar", version) ;

      this.remote  = Project("org.exoplatform.kernel", "exo.kernel.component.remote", "jar", version) ;
      this.remote.addDependency(Project("javagroups", "jgroups-all", "jar", "2.4"));
      return this ;
    }
    this.component = component() ;
    return this ;
  }

  core(String version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/core" ;
    this.relativeSRCRepo =  "core/trunk" ;
    this.name =  "core" ;

    component(){
      this.common = Project("org.exoplatform.core", "exo.core.component.common", "jar", version) ;
      this.common.addDependency(Project("directory-naming", "naming-core", "jar", "0.8"));
      this.common.addDependency(Project("directory-naming", "naming-java", "jar", "0.8"));
      this.common.addDependency(Project("jotm", "jotm", "jar", "2.0.10"));
      this.common.addDependency(Project("javax.resource", "connector", "jar", "1.5"));

      this.ldap = Project("org.exoplatform.core", "exo.core.component.ldap", "jar", version) ;

      this.database = Project("org.exoplatform.core", "exo.core.component.database", "jar", version) ;
      this.database.addDependency(Project("org.hibernate", "hibernate", "jar", "3.1.2"));
      this.database.addDependency(Project("commons-collections", "commons-collections", "jar", "3.1"));
      this.database.addDependency(Project("c3p0", "c3p0", "jar", "0.8.4.5"));
      this.database.addDependency(Project("antlr", "antlr", "jar", "2.7.5"));
      this.database.addDependency(Project("javax.transaction", "jta", "jar", "1.0.1B"));
      this.database.addDependency(Project("jotm", "jotm_jrmp_stubs", "jar", "2.0.10"));
      this.database.addDependency(Project("jotm", "jotm", "jar", "2.0.10"));
      this.database.addDependency(Project("howl", "howl-logger", "jar", "0.1.11"));
      this.database.addDependency(Project("hsqldb", "hsqldb", "jar", "1.8.0.7"));
      this.database.addDependency(Project("javax.resource", "connector-api", "jar", "1.5"));

      this.document = Project("org.exoplatform.core", "exo.core.component.document", "jar", version) ;
      this.document.addDependency(Project("pdfbox", "pdfbox", "jar", "0.7.2"));
      this.document.addDependency(Project("html-parser", "html-parser", "jar", "1.6"));
      this.document.addDependency(Project("poi", "poi", "jar", "3.0-alpha1"));
      this.document.addDependency(Project("poi", "poi-scratchpad", "jar", "3.0-alpha1"));

      this.organization = Project("org.exoplatform.core", "exo.core.component.organization.api", "jar", version) ;
      this.organization.addDependency(Project("org.exoplatform.core", "exo.core.component.organization.jdbc", "jar", version));
      this.security = Project("org.exoplatform.core", "exo.core.component.security", "jar", version) ;

      this.xmlProcessing = Project("org.exoplatform.core", "exo.core.component.xml-processing", "jar", version) ;

      this.resources = Project("org.exoplatform.core", "exo.core.component.resources.api", "jar", version);
      this.resources.addDependency(Project("org.exoplatform.core", "exo.core.component.database", "jar", version));

      return this ;
    }
    this.component = component() ;
    return this ;
  }

  eXoPortletContainer(String version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/portletcontainer" ;
    this.relativeSRCRepo =  "portlet-container/trunk" ;
    this.name =  "pc" ;

    services() {
      this.jsr168 = Project("org.exoplatform.portletcontainer", "exo.pc.component.core", "jar", version);
      this.jsr168.addDependency(Project("org.exoplatform.portletcontainer", "exo.pc.component.plugins.pc", "jar", version));
      this.jsr168.addDependency(Project("javax.portlet", "portlet-api", "jar", "2.0"));
      return this ;
    }
    this.services = services();
    return this ;
  }

  eXoJcr(String version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/jcr" ;
    this.relativeSRCRepo =  "jcr/trunk" ;
    this.name =  "jcr" ;

    services(){
      this.jcr = Project("org.exoplatform.jcr", "exo.jcr.component.core", "jar", version);
      this.jcr.addDependency(Project("org.exoplatform.jcr", "exo.jcr.component.ext", "jar", version));
      this.jcr.addDependency(Project("org.exoplatform.jcr", "exo.jcr.component.webdav", "jar", version));
      this.jcr.addDependency(Project("org.exoplatform.jcr", "exo.jcr.component.ftp", "jar", version));

      this.jcr.addDependency(Project("jcr", "jcr", "jar", "1.0"));
      this.jcr.addDependency(Project("concurrent", "concurrent", "jar", "1.3.2"));
      this.jcr.addDependency(Project("javagroups", "jgroups-all", "jar", "2.4"));
      this.jcr.addDependency(Project("lucene", "lucene", "jar", "1.4.3"));

      return this ;
    }
    this.services = services() ;

    frameworks() {
      this.web = Project("org.exoplatform.jcr", "exo.jcr.framework.web", "jar", version);
      this.web.addDependency(Project("org.exoplatform.jcr", "exo.jcr.component.rest", "jar", version));
      this.web.addDependency(Project("commons-chain", "commons-chain", "jar", "1.0"));
      this.web.addDependency(Project("log4j", "log4j", "jar", "1.2.8"));

      this.command = Project("org.exoplatform.jcr", "exo.jcr.framework.command", "jar", version) ;

      return this ;
    }
    this.frameworks = frameworks() ;
    return this ;
  }

  portal(kernel, core, eXoPortletContainer, jcr, version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/portal" ;
    this.relativeSRCRepo =  "portal/trunk" ;
    this.name =  "portal" ;

    component(){
      this.jcrext = Project("org.exoplatform.portal", "exo.portal.component.jcrext", "jar", version) ;
      this.portal  = Project("org.exoplatform.portal", "exo.portal.component.portal", "jar", version) ;
      this.web = Project("org.exoplatform.portal", "exo.portal.component.web", "jar", version) ;
      this.applicationRegistry  = Project("org.exoplatform.portal", "exo.portal.component.application-registry", "jar", version) ;
      this.resources = Project("org.exoplatform.portal", "exo.portal.component.resources", "jar", version) ;
      this.scripting = Project("org.exoplatform.portal", "exo.portal.component.scripting", "jar", version) ;
      this.scripting.addDependency(Project("rhino", "js", "jar", "1.6R5"));
      this.xmlParser = Project("org.exoplatform.portal", "exo.portal.component.xml-parser", "jar", version) ;
      this.xmlParser.addDependency(Project("commons-httpclient", "commons-httpclient", "jar", "3.0"));
      this.xmlParser.addDependency(Project("commons-codec", "commons-codec", "jar", "1.3"));
      return this ;
    }
    this.component = component() ;


    webui() {
      this.webuicore  = Project("org.exoplatform.portal", "exo.portal.webui.core", "jar", version) ;
      this.webuieXo  = Project("org.exoplatform.portal", "exo.portal.webui.eXo", "jar", version) ;
      this.portal  = Project("org.exoplatform.portal", "exo.portal.webui.portal", "jar", version) ;
      this.portal.addDependency(webuicore) ;
      this.portal.addDependency(webuieXo) ;
      this.portal.addDependency(component.web) ;
      this.portal.addDependency(component.scripting) ;
      this.portal.addDependency(component.jcrext) ;
      this.portal.addDependency(component.resources) ;
      this.portal.addDependency(component.applicationRegistry) ;
      this.portal.addDependency(component.portal) ;

      this.portal.addDependency(kernel.container) ;
      this.portal.addDependency(kernel.component.common) ;
      this.portal.addDependency(kernel.component.remote) ;
      this.portal.addDependency(kernel.component.cache) ;
      this.portal.addDependency(kernel.component.command) ;

      this.portal.addDependency(core.component.database) ;
      this.portal.addDependency(core.component.organization) ;
      this.portal.addDependency(core.component.security) ;
      this.portal.addDependency(core.component.xmlProcessing) ;
      this.portal.addDependency(core.component.document) ;
      this.portal.addDependency(core.component.resources) ;

      this.portal.addDependency(jcr.services.jcr) ;
      this.portal.addDependency(eXoPortletContainer.services.jsr168) ;
      return this ;
    }
    this.webui = webui() ;

    portlet() {
      this.content = Project("org.exoplatform.portal", "exo.portal.portlet.content", "exo-portlet", version);
      this.content.addDependency(component.xmlParser) ;

      this.exoadmin = Project("org.exoplatform.portal", "exo.portal.portlet.exoadmin", "exo-portlet", version);
      this.site = Project("org.exoplatform.portal", "exo.portal.portlet.site", "exo-portlet", version);
      this.web = Project("org.exoplatform.portal", "exo.portal.portlet.web", "exo-portlet", version);
      this.test = Project("org.exoplatform.portal", "exo.portal.portlet.test", "exo-portlet", version);
      return this ;
    }
    this.portlet = portlet();

    eXoApplication() {
      this.web = Project("org.exoplatform.portal", "exo.portal.eXoApplication.web", "war", version);
      this.web.deployName = "eXoAppWeb" ;
      return this ;
    }
    this.eXoApplication = eXoApplication();

    eXoWidget() {
      this.web = Project("org.exoplatform.portal", "exo.portal.eXoWidgetWeb", "war", version);
      this.web.deployName = "eXoWidgetWeb" ;
      return this ;
    }
    this.eXoWidget = eXoWidget();

    eXoSample() {
      this.framework = Project("org.exoplatform.portal", "exo.portal.sample.framework", "war", version);
      this.framework.deployName = "eXoSampleFramework" ;
      return this ;
    }
    this.eXoSample = eXoSample();

    web() {
      this.eXoResources = Project("org.exoplatform.portal", "exo.portal.web.eXoResources", "war", version);

      this.portal = Project("org.exoplatform.portal", "exo.portal.web.portal", "exo-portal", version);
      this.portal.addDependency(webui.portal) ;
      this.portal.addDependency(eXoResources) ;
      this.portal.addDependency(jcr.frameworks.web) ;
      this.portal.addDependency(jcr.frameworks.command) ;
      return this ;
    }
    this.web = web() ;

    server() {
      tomcat() {
        this.patch = Project("org.exoplatform.portal", "exo.portal.server.tomcat.patch", "jar", version);
        return this ;
      }
      this.tomcat = tomcat() ;

      jboss() {
        this.patch = Project("org.exoplatform.portal", "exo.portal.server.jboss.patch", "jar", version);
        return this ;
      }
      this.jboss = jboss() ;

      jonas() {
        this.patch = Project("org.exoplatform.portal", "exo.portal.server.jonas.patch", "jar", version);
        return this ;
      }
      this.jonas = jonas() ;

      return this;
    }
    this.server = server() ;

    return this ;
  }

  ecm(kernel, core, eXoPortletContainer, jcr, portal, version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/ecm" ;
    this.relativeSRCRepo =  "ecm/trunk" ;
    this.name =  "ecm" ;

    portlet() {
      this.ecm = Project("org.exoplatform.ecm", "exo.ecm.portlet.ecm", "exo-portlet", version);
      this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.cms", "jar",  version)) ;
      //this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.cms.api", "jar",  version)) ;
      //this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.cms.impl", "jar", version)) ;
      this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.workflow.api", "jar", version)) ;
      this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.workflow.impl.jbpm.facade", "jar", version)) ;
      this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.workflow.impl.jbpm.engine", "jar", "3.0")) ;
      this.ecm.addDependency(Project("rome", "rome", "jar", "0.8")) ;
      this.ecm.addDependency(Project("com.totsp.feedpod", "itunes-com-podcast", "jar", "0.2")) ;
      this.ecm.addDependency(Project("ical4j", "ical4j", "jar", "0.9.20")) ;
      this.ecm.addDependency(Project("jdom", "jdom", "jar", "1.0")) ;
      this.ecm.addDependency(Project("org.apache.ws.commons", "ws-commons-util", "jar", "1.0.1")) ;
      //this.ecm.addDependency(Project("org.exoplatform.ecm", "exo.ecm.component.workflow.impl.bonita", "jar", version)) ;

      this.workflow = Project("org.exoplatform.ecm", "exo.ecm.portlet.workflow", "exo-portlet", version);
      return this ;
    }
    this.portlet = portlet();

    web() {
      this.ecmportal = Project("org.exoplatform.ecm", "exo.ecm.web.portal", "exo-portal", version);
      this.ecmportal.addDependency(portal.web.eXoResources) ;
      this.ecmportal.addDependency(portal.webui.portal) ;
      this.ecmportal.addDependency(jcr.frameworks.command) ;
      this.ecmportal.addDependency(jcr.frameworks.web) ;
      return this ;
    }
    this.web = web() ;

    return this ;
  }

  groupware(kernel, core, eXoPortletContainer, jcr, portal, version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/groupware" ;
    this.relativeSRCRepo =  "groupware/trunk" ;
    this.name =  "groupware" ;

    portlet() {
      this.forum = Project("org.exoplatform.groupware", "exo.groupware.portlet.forum.webapp", "exo-portlet", version);
      this.forum.addDependency(Project("org.exoplatform.groupware", "exo.groupware.portlet.forum.component", "jar",  version)) ;

      this.mail = Project("org.exoplatform.groupware", "exo.groupware.portlet.mail.webapp", "exo-portlet", version);
      this.mail.addDependency(Project("org.exoplatform.groupware", "exo.groupware.portlet.mail.component", "jar",  version)) ;

      this.calendar = Project("org.exoplatform.groupware", "exo.groupware.portlet.calendar.webapp", "exo-portlet", version);
      this.calendar.addDependency(Project("org.exoplatform.groupware", "exo.groupware.portlet.calendar.component", "jar",  version)) ;
      return this ;
    }
    this.portlet = portlet();

    return this ;
  }

  m6(kernel, core, eXoPortletContainer, jcr, portal, version) {
    this.version =  version ;
    this.relativeMavenRepo =  "org/exoplatform/m6" ;
    this.relativeSRCRepo =  "m6/trunk" ;
    this.name =  "m6" ;

    portlet() {
      this.web = Project("org.exoplatform.m6", "m6.portlet.web", "exo-portlet", version);
      this.web.deployName = "m6PortletWeb" ;
      return this ;
    }
    this.portlet = portlet();

    web() {
      this.m6Resources = Project("org.exoplatform.m6", "m6.web.m6Resources", "war", version);
      this.m6Resources.deployName = "m6Resources" ;

      this.m6portal = Project("org.exoplatform.m6", "m6.web.portal", "exo-portal", version);
      this.m6portal.addDependency(portal.web.eXoResources) ;
      this.m6portal.addDependency(portal.webui.portal) ;
      this.m6portal.addDependency(jcr.frameworks.command) ;
      this.m6portal.addDependency(jcr.frameworks.web) ;

      return this ;
    }
    this.web = web() ;

    return this ;
  }

  return  this;
}
