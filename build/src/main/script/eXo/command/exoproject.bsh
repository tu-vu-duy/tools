importCommands("eXo.server") ;

exoproject() {
  server = Tomcat(eXo.env.workingDir + "/exo-tomcat") ; 

  ModuleDeploy() {
    maven = maven() ;
    String[] mvnArgs = {"clean", "install"} ;
    maven.MavenTask(eXo.env.currentDir, mvnArgs).execute() ;
     
    src = new File("target") ;
    File[] child =  src.listFiles();
    for(i = 0; i < child.length; i++) {
      File file =  child[i] ;
      if(file.getName().endsWith(".jar")) {
        eXo.System.verbose("COPY", file.getName() + " to " + server.deployLibDir) ;
        eXo.IOUtil.copyFile(file.getAbsolutePath(), server.deployLibDir + "/"  + file.getName()) ;
      } else if(file.getName().endsWith(".war")) {
        eXo.System.verbose("COPY", file.getName() + " to " + server.deployWebappDir) ;
        eXo.IOUtil.copyFile(file.getAbsolutePath(), server.deployWebappDir + "/"  + file.getName()) ;
      }
    }
  }

  QuickWarDeploy() {
    maven = maven() ;
    String[] mvnArgs = {"compile", "jar:jar"} ;
    maven.MavenTask(eXo.env.currentDir, mvnArgs).execute() ;
     
    dest = new File("src/main/webapp/WEB-INF/lib") ;
    if(!dest.exists())  dest.mkdir() ;
    src = new File("target") ;
    File[] child =  src.listFiles();
    for(i = 0; i < child.length; i++) {
      File file =  child[i] ;
      if(file.getName().endsWith(".jar")) {
        eXo.System.verbose("COPY", file.getName() + " to " + server.deployLibDir) ;
        eXo.IOUtil.copyFile(file.getAbsolutePath(), "src/main/webapp/WEB-INF/lib/"  + file.getName()) ;
      }
    }
  }

  ContextDeploy() {
    folder = new File("src/main/resources/tomcat") ;
    File[] child =  folder.listFiles();
    String destination = server.serverHome + "/conf/Catalina/localhost" ;
    for(i = 0; i < child.length; i++) {
      File file =  child[i] ;
      if(file.getName().endsWith(".xml")) {
        eXo.System.verbose("COPY", file.getName() + " to " + destination) ;
        eXo.IOUtil.copyFile(file.getAbsolutePath(), destination + "/"  + file.getName()) ;
      }
    }
  }
  return this ;
}

exoproject(String[] args) {
  printInstructions() {
    print(
      "\n\n" +
      "Usage of exoproject command: \n\n" +
      "  exoproject --deploy=[context,module,quickwar] [--server=tomcat,jboss,jonas] \n\n" +
      "Options: \n" +
      "  * --deploy             is mandatory. Enables to deploy either a context, a module (jar) or a war.\n" +
      "  * --server             is optional. Enables to specify the target application server.\n"
    );
  }

  if(args.length == 0) {
    printInstructions() ;
    return ;
  }

  exoproject = exoproject() ;
  for(int i = 0; i < args.length; i++) {
    String arg = args[i] ;
    if("--server=jonas".equals(arg)) {
      exoproject.server = Jonas(eXo.env.workingDir + "/exo-jonas") ; 
    } else if("--server=jboss".equals(arg)) {
      exoproject.server = Jboss(eXo.env.workingDir + "/exo-jboss") ; 
    } else if("--server=tomcat".equals(arg)) {
      exoproject.server = Tomcat(eXo.env.workingDir + "/exo-tomcat") ; 
    } else if("--deploy=context".equals(arg)) {
      exoproject.ContextDeploy() ;
    } else if("--deploy=module".equals(arg)) {
      exoproject.ModuleDeploy() ;
    } else if("--deploy=quickwar".equals(arg)) {
      exoproject.QuickWarDeploy() ;
    }
  }
}
