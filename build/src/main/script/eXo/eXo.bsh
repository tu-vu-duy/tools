import java.io.*;
import java.util.jar.* ;

eXo() {
  util() {
    shift(String[] args) {
      if(args.length == 0) return args ;
      String[] newargs = new String[args.length - 1] ;
      for(int i = 0; i < newargs.length; i++)  newargs[i] = args[i + 1] ;
      return newargs ;
    }
    return this;
  }

  Env() {
    this.baseDir    =  System.getProperty("exo.base.dir");
    this.workingDir =   baseDir + "/exo-working" ;
    this.dependenciesDir =  baseDir + "/exo-dependencies"  ;
    this.eXoProjectsDir = baseDir + "/eXoProjects" ;
    this.javaHome    =  System.getProperty("exo.java.home");
    this.currentDir  =  System.getProperty("exo.current.dir");
    if(currentDir.startsWith("/cygdrive/")) {
      this.currentDir =  currentDir.substring("/cygdrive/".length()) ;
      this.currentDir = currentDir.replaceFirst("/", ":/");
    }
    this.m2Repos = System.getProperty("exo.m2.repos").split(",") ;
    for(int i = 0 ; i< m2Repos.length; i++) m2Repos[i] = m2Repos[i].trim();
    return this ;
  }

  env = Env()  ;
  util = util() ;
  IOUtil = null ;
  system = null ;
  
  return this ;
}

eXo = eXo() ;
addClassPath(eXo.env.eXoProjectsDir + "/tools/trunk/build/src/main/script") ;
importCommands("eXo.core") ;
importCommands("eXo.command") ;
eXo.IOUtil = IOUtil();
eXo.System = System();

String[] cmdargs = bsh.args ;
String command =  cmdargs[0] ;
cmdargs = eXo.util.shift(cmdargs) ;
eval(command + "(cmdargs)");
